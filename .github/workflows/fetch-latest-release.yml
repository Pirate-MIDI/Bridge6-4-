on:
  repository_dispatch:
    types:
    - release
    
env:
  NEW_RELEASE_NAME: TestName
  NEW_RELEASE_BODY: TestBody
  NEW_RELEASE_ID: 1
  NEW_RELEASE_TAG_NAME: v0
  NEW_ASSET_ID: 1
  
  
jobs:
  publishRelease:
    runs-on: ubuntu-latest
    env:
      NEW_RELEASE_IS_ALPHA: False
    
    steps:
      - name: Request All Releases
        id: requestAllReleases
        run: |
          curl \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.RELEASE_TOKEN }}" \
          https://api.github.com/repos/Pirate-MIDI/Bridge/releases -o release.json
          
      - name: JSON to Variables
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: 'release.json'
          prefix: release
          
      - name: Check Alpha Release
        run: if [[ "${{env.release_0_name}}" == *"alpha"* ]]; then \
          echo "Alpha Version Found." && ${{NEW_RELEASE_IS_ALPHA}} = True \
          fi
          
      - name: Create New Assets Folder
        run: mkdir ./assets
        
      - name: Download Release Assets
        id: downloadAssets
        env:
          NEW_RELEASE_TAG_NAME: "${{env.release_0_tag_name}}"
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'Pirate-MIDI/Bridge'
          version: 'tags/${{env.NEW_RELEASE_TAG_NAME}}'
          file: "bridge"
          regex: true
          target: 'assets/'
          token: ${{ secrets.RELEASE_TOKEN }}
          
      - name: Echo Downloaded Assets
        run: ls assets
        
      - name: Create Mirror Release
        id: createRelease
        env:
          NEW_RELEASE_NAME: "${{env.release_0_name}}"
          NEW_RELEASE_BODY: "${{toJson(env.release_0_body)}}"
          NEW_RELEASE_TAG_NAME: "${{env.release_0_tag_name}}"
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.RELEASE_TOKEN }}" \
          https://api.github.com/repos/Pirate-MIDI/Pirate-MIDI-Features-Bug-Tracking/releases \
          -d '{"tag_name":"${{env.NEW_RELEASE_TAG_NAME}}","target_commitish":"main","name":"${{env.NEW_RELEASE_NAME}}","body":${{env.NEW_RELEASE_BODY}},"draft":false,"prerelease":false,"generate_release_notes":false}' 
      
      - name: Upload Release Asset
        id: uploadReleaseAsset
        env:
          NEW_RELEASE_TAG: "${{env.release_0_tag_name}}"
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'assets/*.bin'
          repo-token: ${{ secrets.RELEASE_TOKEN }}
          release-tag: '${{env.NEW_RELEASE_TAG}}'
        
