on:
  repository_dispatch:
    types:
    - release
    
env:
  NEW_RELEASE_NAME: TestName
  NEW_RELEASE_BODY: TestBody
  NEW_RELEASE_TAG_NAME: v0
  
  
jobs:
  my-job:
    runs-on: ubuntu-latest
    steps:
      - name: Request Release
        id: myRequest
        run: |
          curl \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.RELEASE_TOKEN }}" \
          https://api.github.com/repos/Pirate-MIDI/Bridge/releases/latest -o release.json
      - name: Download Release Assets
        id: assetDownload
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'Pirate-MIDI/Bridge'
          version: 'tags/v1.0.3'
          file: 'bridge6_v1.0.3.1.bin'
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: JSON to Variables
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: 'release.json'
          prefix: release
      - name: Filter and Assign Variables
        run: echo $env.release_body
        env:
          NEW_RELEASE_NAME: "${{env.release_name}}"
          NEW_RELEASE_BODY: "${{env.release_body}}"
      - name: Echo Variables
        run: echo $env.release_body
      - name: Create Mirror Release
        id: createRelease
        env:
          NEW_RELEASE_NAME: "${{env.release_name}}"
          NEW_RELEASE_BODY: "${{toJson(env.release_body)}}"
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.RELEASE_TOKEN }}" \
          https://api.github.com/repos/Pirate-MIDI/Pirate-MIDI-Features-Bug-Tracking/releases \
          -d '{"tag_name":"v0.0.1","target_commitish":"main","name":"${{env.NEW_RELEASE_NAME}}","body":${{env.NEW_RELEASE_BODY}},"draft":false,"prerelease":false,"generate_release_notes":false}'
      - name: Upload Release Asset
        id: uploadReleaseAsset 
        run: |
          curl \
          -X POST \
          --header "Content-Type:application/bin" \
          -H "Authorization: token ${{ secrets.RELEASE_TOKEN }}" \
          --data-binary bridge6_v1.0.3.1.bin \
          "https://uploads.github.com/repos/Pirate-MIDI/Pirate-MIDI-Features-Bug-Tracking/releases/v1.0.3/assets?name=bridge6_v1.0.3.1.bin"
        
      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ env.release_upload_url}}
          asset_path: bridge6_v1.0.3.1.bin
        #uses: actions/upload-release-asset@v1
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
          #upload_url: "https://uploads.github.com/repos/Pirate-MIDI/Bridge/releases/57338898/assets" # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          #asset_path: bridge6_v1.0.3.1.bin
          #asset_content_type: application/bin
          #asset_name: bridge6_v1.0.3.1.bin
